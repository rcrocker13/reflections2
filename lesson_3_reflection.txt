When would you want to use a remote repository rather than keeping all your work
local?

You would want to use a remote repo when you're collaborating with others. You may also want to use a remote remote if the code you're working on is absolutely massive. It's also a good idea to get the repo off your local machine in case your computer get stolen, lost or broken. The remote comptures hosting your work are backed up and geographically secure.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

Manually pulling changes makes sense when you consider other contributors may be working on parts of the same repo that affect your code. If git automatically pulled changes there's a good chance those changes would overwrite the work you are doing.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

A fork is like a hosted clone. Forks are restricted to GitHub exclusively. Clones are duplications of repositories that can take place locally or on GitHub. Branches are off shoots of commit history from your master branch.

What is the benefit of having a copy of the last known state of the remote
stored locally?

This can be useful when you need to compare diffs but might not have access to wifi.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

Without github I would need to work with an application that has version control baked in. If a tool like that isn't available, then I'd be passing files back and forth via email.

A tool that facilitates this workflow would be fine. There may be some bottlenecks, but at least we wouldn't have to duplicate files. Emailing files back and forth will inevitably lead to rework.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
